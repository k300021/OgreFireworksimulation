#ifndef __CHARACTER_H__
#define __CHARACTER_H__

#include <Ogre.h>
#include "Header.h"
#include "OgreDetourCrowd.h"
#include "DetourCrowd/DetourCrowd.h"
#include "OgreDetourTileCache.h"
#include "Agent/DynamicLines.h"

//-----------------------------------------------

class Character
{
public:
    
    Character( Ogre::SceneManager* sceneMgr, OgreDetourCrowd* detourCrowd, OgreDetourTileCache* detourTileCache, Ogre::String identity, Ogre::Vector3 position, Ogre::Vector3 destination, bool debugDraw );
    ~Character( void );
    
    Ogre::String    getIdentity( void );
    Ogre::Vector3   getPosition( void );

    void            updateDestination( Ogre::Vector3 destination, bool updatePreviousPath = true );
    void            updatePosition( double timeSinceLastFrame );
 
    bool            destinationReached( void );
    
    void            setDebugVisibility( bool visible );
    
    bool    mCheckDestination;
    int     mCheckTimeCount;

private:
    
    Ogre::SceneManager*     mSceneMgr;
    Ogre::SceneNode*        mDebugNode;
    Ogre::SceneNode*        mNode;
    Ogre::SceneNode*        mLine;
    Ogre::Entity*           mEntity;
    Ogre::AnimationState*   mAnimState;
    Ogre::Real              mAnimSpeedScale;
    Ogre::Entity*           mDebugEntity;
    
    Ogre::String            mIdentity;
    Ogre::Vector3           mPosition;
    Ogre::Vector3           mDestination;
    Ogre::Vector3           mVelocity;

    OgreDetourCrowd*        mDetourCrowd;
    OgreDetourTileCache*    mDetourTileCache;
    dtTileRef               mTempObstacle;
    
    const dtCrowdAgent*     mAgent;
    int                     mAgentID;

    bool                    mDebugDraw;
    
private:
    
    void    createVelocityLine( void );
    void    updateVelocityLine( void );
    void    deleteVelocityLine( void );
};

//----------------------------------------------

#endif
